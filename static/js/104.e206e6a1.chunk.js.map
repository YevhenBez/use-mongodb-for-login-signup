{"version":3,"file":"static/js/104.e206e6a1.chunk.js","mappings":"oiSACA,EAAqC,sCAArC,EAA6G,mDAA7G,EAAwM,yDAAxM,EAA8S,8DAA9S,EAA6Z,kEAA7Z,EAA+gB,iEAA/gB,EAAooB,qEAApoB,EAAqvB,6DAArvB,EAAm2B,kEAAn2B,EAAw9B,oEAAx9B,EAAwjC,6CAAxjC,EAAgpC,4DAAhpC,EAAgvC,qDAAhvC,EAA+0C,2DAA/0C,EAAq7C,4DAAr7C,EAAihD,iDAAjhD,EAAkmD,iDAAlmD,EAAyrD,uDAAzrD,EAA8xD,+DAA9xD,EAA64D,iE,kBC6Q74D,EAzQkB,WAChB,IASIA,EAPJC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAsCT,EAAAA,EAAAA,UAAS,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA1CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAoCb,EAAAA,EAAAA,UAClCc,KAAKC,KAAKC,EAAAA,OANS,IAOpBC,GAAAf,EAAAA,EAAAA,GAAAW,EAAA,GAFMK,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAM1BG,GAAoBC,EAAAA,EAAAA,UAAQ,WAChC,OAAOL,EAAAA,QACL,SAAAM,GAAG,OACDA,EAAIC,KAAKC,cAAcC,SAAStB,EAAOqB,gBACvCF,EAAII,QAAQF,cAAcC,SAAStB,EAAOqB,gBAC1CF,EAAIK,MAAMF,SAAStB,IACnBmB,EAAIM,MAAMJ,cAAcC,SAAStB,EAAOqB,gBACxCF,EAAIO,QAAQL,cAAcC,SAAStB,EAAOqB,gBAC1CF,EAAIQ,OAAOL,SAAStB,EAAO,GAEjC,GAAG,CAACA,KAGJ4B,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgBlB,KAAKC,KAAKK,EAAkBa,OAzB/B,GA0BnBd,EAAca,EAChB,GAAG,CAAC7B,EAAQiB,EA3BS,KA8BrBW,EAAAA,EAAAA,YAAU,WACJpB,EAAcO,GAChBN,EAAe,EAEnB,GAAG,CAACD,EAlCiB,EAkCUS,EAAmBF,IAElD,IAAMgB,GAAeb,EAAAA,EAAAA,UAAQ,WAC3B,OAAOD,EAAkBe,MArCN,GAsChBxB,EAAc,GAtCE,EAuCjBA,EAEJ,GAAG,CAACA,EAzCiB,EAyCUS,IAE/BtB,EAAuBoB,EAAa,EAAI,EAAIA,EAE5C,IAAMkB,EAAc,SAAAC,GAClBzB,EAAeyB,EACjB,EAqCA,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAuBC,SAAA,EACrCH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAoCC,SAAA,EAClDH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAA0CC,SAAA,EACxDC,EAAAA,EAAAA,KAAA,UACEH,UACEhC,EACIiC,EACAA,EAENG,QAAS,WACPvC,EAAU,IACVQ,EAAe,EACjB,EACAgC,QAAS,kBAAMpC,GAAa,EAAK,EAACiC,SACnC,mBAGDC,EAAAA,EAAAA,KAAA,UACEH,UACGhC,EAEGiC,EADAA,EAGNG,QAAS,WACPvC,EAAU,UACVQ,EAAe,EACjB,EACAgC,QAAS,kBAAMpC,GAAa,EAAM,EAACiC,SACpC,uBAIHH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAA8CC,SAAA,EAC5DC,EAAAA,EAAAA,KAAA,OACEG,MAAM,KACNC,OAAO,KACPP,UAAWC,EAAmDC,UAE9DC,EAAAA,EAAAA,KAAA,OAAKK,UAAS,GAAAC,OAAKC,EAAAA,EAAM,gBAE3BP,EAAAA,EAAAA,KAAA,SACEQ,KAAK,OACLC,MAAOhD,EACPiD,SAzDe,SAAAC,GACvBjD,EAAUiD,EAAMC,cAAcH,OAC9BvC,EAAe,GAEmB,WAA9ByC,EAAMC,cAAcH,OACtB3C,GAAa,GAGmB,WAA9B6C,EAAMC,cAAcH,OACtB3C,GAAa,EAEjB,EA+CU+C,YAAY,SACZhB,UAAWC,WAIjBF,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAA8BC,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,SAAAD,UACEH,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAkCC,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,KACfE,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAsCC,SAAC,mBAGtDC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAsCC,SAAC,aACtDC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAsCC,SAAC,kBAGtDC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAsCC,SAAC,WACtDC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAsCC,SAAC,aACtDC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAA4CC,SAAC,YAG5DC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,SAIlBrC,GACCuC,EAAAA,EAAAA,KAAA,SAAAD,SACGP,EAAasB,KAAI,SAAAC,GAAgB,OAChCnB,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAkCC,SAC9CgB,EAAiBlC,QAEpBmB,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAkCC,SAC9CgB,EAAiB/B,WAEpBgB,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAkCC,SAC9CgB,EAAiB9B,SAEpBe,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAkCC,SAC9CgB,EAAiB7B,SAEpBc,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAkCC,SAC9CgB,EAAiB5B,WAEpBa,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAwCC,UACrDC,EAAAA,EAAAA,KAAA,OACEH,UAC8B,aAA5BkB,EAAiB3B,OACbU,EACAA,EACLC,SAEAgB,EAAiB3B,YAGtBY,EAAAA,EAAAA,KAAA,WA5BOe,EAAiBC,GA6BrB,OAIThB,EAAAA,EAAAA,KAAA,SAAAD,SACGP,EAAasB,KAAI,SAAAG,GAAY,OAC5BrB,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAkCC,SAC9CkB,EAAapC,QAEhBmB,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAkCC,SAC9CkB,EAAajC,WAEhBgB,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAkCC,SAC9CkB,EAAahC,SAEhBe,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAkCC,SAC9CkB,EAAa/B,SAEhBc,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAkCC,SAC9CkB,EAAa9B,WAEhBa,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAwCC,UACrDC,EAAAA,EAAAA,KAAA,OACEH,UAC0B,aAAxBoB,EAAa7B,OACTU,EACAA,EACLC,SAEAkB,EAAa7B,YAGlBY,EAAAA,EAAAA,KAAA,WA5BOiB,EAAaD,GA6BjB,UAKbpB,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,UACEC,QAAS,kBAAMP,EAAYzB,EAAc,EAAE,EAC3CiD,SAA0B,IAAhBjD,EAAkB8B,SAC7B,mCAGA9B,EAAc,GAAKO,EAAa,IAC/BwB,EAAAA,EAAAA,KAAA,UAAQC,QAAS,kBAAMP,EAAY,EAAE,EAACK,SAAC,MAExC9B,EAAc,GAAKO,EAAa,IAAKwB,EAAAA,EAAAA,KAAA,QAAAD,SAAM,QA3LtB,WAC1B,IAAMoB,EAAc,GAChBC,EAAYnD,EAAc,EAC1BoD,EAAUpD,EAAc,EAExBmD,GAAa,IAEfC,GADAD,EAAY,GACUhE,EAAuB,GAG3CiE,EAAU7C,IAEZ4C,GADAC,EAAU7C,GACYpB,EAAuB,GAG/C,IAAK,IAAIkE,EAAIF,EAAWE,GAAKD,EAASC,IACpCH,EAAYI,KAAKD,GAGnB,OAAOH,CACT,CAwKOK,GAAsBV,KAAI,SAAAnB,GAAU,OACnCK,EAAAA,EAAAA,KAAA,UAEEC,QAAS,kBAAMP,EAAYC,EAAW,EACtC8B,MAAO,CACLC,gBAAiB/B,IAAe1B,EAAc,OAAS,QACvD8B,SAEDJ,GANIA,EAOE,IAGV1B,EAAcO,EAAa,GAAKA,EAAa,IAAKwB,EAAAA,EAAAA,KAAA,QAAAD,SAAM,QACxD9B,EAAcO,EAAa,GAAKA,EAAa,IAC5CwB,EAAAA,EAAAA,KAAA,UAAQC,QAAS,kBAAMP,EAAYlB,EAAW,EAACuB,SAAEvB,KAEnDwB,EAAAA,EAAAA,KAAA,UACEC,QAAS,kBAAMP,EAAYzB,EAAc,EAAE,EAC3CiD,SAAUjD,IAAgBO,EAAWuB,SACtC,8CAMT,C","sources":["webpack://react-homework-template/./src/pages/customers/css/customers.module.css?85d9","pages/customers/Customers.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"customersContainer\":\"customers_customersContainer__nqcf+\",\"customersContainer__filterBoard\":\"customers_customersContainer__filterBoard__8GKo6\",\"customersContainer__filterBoard__btns\":\"customers_customersContainer__filterBoard__btns__GNrgX\",\"customersContainer__filterBoard__btns__all\":\"customers_customersContainer__filterBoard__btns__all__-Zb9q\",\"customersContainer__filterBoard__btns__allBlur\":\"customers_customersContainer__filterBoard__btns__allBlur__-RDIC\",\"customersContainer__filterBoard__btns__active\":\"customers_customersContainer__filterBoard__btns__active__CVHO+\",\"customersContainer__filterBoard__btns__activeBlur\":\"customers_customersContainer__filterBoard__btns__activeBlur__tfv9X\",\"customersContainer__filterBoard__inputBox\":\"customers_customersContainer__filterBoard__inputBox__NxpOt\",\"customersContainer__filterBoard__inputBox__svg\":\"customers_customersContainer__filterBoard__inputBox__svg__A-7Fd\",\"customersContainer__filterBoard__inputBox__input\":\"customers_customersContainer__filterBoard__inputBox__input__7v-u4\",\"customersContainer__table\":\"customers_customersContainer__table__Xm20V\",\"customersContainer__table__tr__indentBgn\":\"customers_customersContainer__table__tr__indentBgn__yCCuI\",\"customersContainer__table__tr__th\":\"customers_customersContainer__table__tr__th__RNAy-\",\"customersContainer__table__tr__thStatus\":\"customers_customersContainer__table__tr__thStatus__u8dmo\",\"customersContainer__table__tr__indentEnd\":\"customers_customersContainer__table__tr__indentEnd__HPdFf\",\"customersContainer__table__tr\":\"customers_customersContainer__table__tr__JVUbW\",\"customersContainer__table__td\":\"customers_customersContainer__table__td__Jr4HU\",\"customersContainer__table__tdStatus\":\"customers_customersContainer__table__tdStatus__i6Uyx\",\"customersContainer__table__tdStatus__active\":\"customers_customersContainer__table__tdStatus__active__Jhktn\",\"customersContainer__table__tdStatus__inactive\":\"customers_customersContainer__table__tdStatus__inactive__rcNER\"};","import React, { useState, useEffect, useMemo } from 'react';\nimport listCustomers from '../../path/to/customers.json';\nimport css from '../../pages/customers/css/customers.module.css';\nimport sprite from '../../img/svg/sprite-icon.svg';\n\nconst Customers = () => {\n  const itemsPerPage = 8;\n\n  const [filter, setFilter] = useState('');\n  const [isFocused, setIsFocused] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(\n    Math.ceil(listCustomers.length / itemsPerPage)\n  );\n\n  let maxPageNumbersToShow;\n\n  const filteredCustomers = useMemo(() => {\n    return listCustomers.filter(\n      row =>\n        row.name.toLowerCase().includes(filter.toLowerCase()) ||\n        row.company.toLowerCase().includes(filter.toLowerCase()) ||\n        row.phone.includes(filter) ||\n        row.email.toLowerCase().includes(filter.toLowerCase()) ||\n        row.country.toLowerCase().includes(filter.toLowerCase()) ||\n        row.status.includes(filter)\n    );\n  }, [filter]);\n\n  // Обновление totalPages\n  useEffect(() => {\n    const newTotalPages = Math.ceil(filteredCustomers.length / itemsPerPage);\n    setTotalPages(newTotalPages);\n  }, [filter, filteredCustomers, itemsPerPage]);\n\n  // Обновление currentPage\n  useEffect(() => {\n    if (currentPage > totalPages) {\n      setCurrentPage(1);\n    }\n  }, [currentPage, itemsPerPage, filteredCustomers, totalPages]);\n\n  const displayItems = useMemo(() => {\n    return filteredCustomers.slice(\n      (currentPage - 1) * itemsPerPage,\n      currentPage * itemsPerPage\n    );\n  }, [currentPage, itemsPerPage, filteredCustomers]);\n\n  maxPageNumbersToShow = totalPages > 3 ? 4 : totalPages;\n\n  const handleClick = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  const generatePageNumbers = () => {\n    const pageNumbers = [];\n    let startPage = currentPage - 2;\n    let endPage = currentPage + 1;\n\n    if (startPage <= 0) {\n      startPage = 1;\n      endPage = startPage + maxPageNumbersToShow - 1;\n    }\n\n    if (endPage > totalPages) {\n      endPage = totalPages;\n      startPage = endPage - maxPageNumbersToShow + 1;\n    }\n\n    for (let i = startPage; i <= endPage; i++) {\n      pageNumbers.push(i);\n    }\n\n    return pageNumbers;\n  };\n\n  const handleChangeName = event => {\n    setFilter(event.currentTarget.value);\n    setCurrentPage(1);\n\n    if (event.currentTarget.value !== 'Active') {\n      setIsFocused(true);\n    }\n\n    if (event.currentTarget.value === 'Active') {\n      setIsFocused(false);\n    }\n  };\n\n  return (\n    <div className={css.customersContainer}>\n      <div className={css.customersContainer__filterBoard}>\n        <div className={css.customersContainer__filterBoard__btns}>\n          <button\n            className={\n              isFocused\n                ? css.customersContainer__filterBoard__btns__all\n                : css.customersContainer__filterBoard__btns__allBlur\n            }\n            onClick={() => {\n              setFilter('');\n              setCurrentPage(1);\n            }}\n            onFocus={() => setIsFocused(true)}\n          >\n            All Customers\n          </button>\n          <button\n            className={\n              !isFocused\n                ? css.customersContainer__filterBoard__btns__active\n                : css.customersContainer__filterBoard__btns__activeBlur\n            }\n            onClick={() => {\n              setFilter('Active');\n              setCurrentPage(1);\n            }}\n            onFocus={() => setIsFocused(false)}\n          >\n            Active Members\n          </button>\n        </div>\n        <div className={css.customersContainer__filterBoard__inputBox}>\n          <svg\n            width=\"24\"\n            height=\"24\"\n            className={css.customersContainer__filterBoard__inputBox__svg}\n          >\n            <use xlinkHref={`${sprite}#search`} />\n          </svg>\n          <input\n            type=\"text\"\n            value={filter}\n            onChange={handleChangeName}\n            placeholder=\"Search\"\n            className={css.customersContainer__filterBoard__inputBox__input}\n          />\n        </div>\n      </div>\n      <table className={css.customersContainer__table}>\n        <thead>\n          <tr className={css.customersContainer__table__tr}>\n            <th className={css.customersContainer__table__tr__indentBgn}></th>\n            <th className={css.customersContainer__table__tr__th}>\n              Customer Name\n            </th>\n            <th className={css.customersContainer__table__tr__th}>Company</th>\n            <th className={css.customersContainer__table__tr__th}>\n              Phone Number\n            </th>\n            <th className={css.customersContainer__table__tr__th}>Email</th>\n            <th className={css.customersContainer__table__tr__th}>Country</th>\n            <th className={css.customersContainer__table__tr__thStatus}>\n              Status\n            </th>\n            <th className={css.customersContainer__table__tr__indentEnd}></th>\n          </tr>\n        </thead>\n\n        {filter ? (\n          <tbody>\n            {displayItems.map(filteredCustomer => (\n              <tr key={filteredCustomer.id}>\n                <td></td>\n                <td className={css.customersContainer__table__td}>\n                  {filteredCustomer.name}\n                </td>\n                <td className={css.customersContainer__table__td}>\n                  {filteredCustomer.company}\n                </td>\n                <td className={css.customersContainer__table__td}>\n                  {filteredCustomer.phone}\n                </td>\n                <td className={css.customersContainer__table__td}>\n                  {filteredCustomer.email}\n                </td>\n                <td className={css.customersContainer__table__td}>\n                  {filteredCustomer.country}\n                </td>\n                <td className={css.customersContainer__table__tdStatus}>\n                  <div\n                    className={\n                      filteredCustomer.status === 'Inactive'\n                        ? css.customersContainer__table__tdStatus__inactive\n                        : css.customersContainer__table__tdStatus__active\n                    }\n                  >\n                    {filteredCustomer.status}\n                  </div>\n                </td>\n                <td></td>\n              </tr>\n            ))}\n          </tbody>\n        ) : (\n          <tbody>\n            {displayItems.map(listCustomer => (\n              <tr key={listCustomer.id}>\n                <td></td>\n                <td className={css.customersContainer__table__td}>\n                  {listCustomer.name}\n                </td>\n                <td className={css.customersContainer__table__td}>\n                  {listCustomer.company}\n                </td>\n                <td className={css.customersContainer__table__td}>\n                  {listCustomer.phone}\n                </td>\n                <td className={css.customersContainer__table__td}>\n                  {listCustomer.email}\n                </td>\n                <td className={css.customersContainer__table__td}>\n                  {listCustomer.country}\n                </td>\n                <td className={css.customersContainer__table__tdStatus}>\n                  <div\n                    className={\n                      listCustomer.status === 'Inactive'\n                        ? css.customersContainer__table__tdStatus__inactive\n                        : css.customersContainer__table__tdStatus__active\n                    }\n                  >\n                    {listCustomer.status}\n                  </div>\n                </td>\n                <td></td>\n              </tr>\n            ))}\n          </tbody>\n        )}\n      </table>\n      <div>\n        <button\n          onClick={() => handleClick(currentPage - 1)}\n          disabled={currentPage === 1}\n        >\n          Назад\n        </button>\n        {currentPage > 3 && totalPages > 4 && (\n          <button onClick={() => handleClick(1)}>1</button>\n        )}\n        {currentPage > 3 && totalPages > 4 && <span>...</span>}\n        {generatePageNumbers().map(pageNumber => (\n          <button\n            key={pageNumber}\n            onClick={() => handleClick(pageNumber)}\n            style={{\n              backgroundColor: pageNumber === currentPage ? 'blue' : 'grey',\n            }}\n          >\n            {pageNumber}\n          </button>\n        ))}\n\n        {currentPage < totalPages - 1 && totalPages > 4 && <span>...</span>}\n        {currentPage < totalPages - 1 && totalPages > 4 && (\n          <button onClick={() => handleClick(totalPages)}>{totalPages}</button>\n        )}\n        <button\n          onClick={() => handleClick(currentPage + 1)}\n          disabled={currentPage === totalPages}\n        >\n          Вперед\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Customers;\n"],"names":["maxPageNumbersToShow","_useState","useState","_useState2","_slicedToArray","filter","setFilter","_useState3","_useState4","isFocused","setIsFocused","_useState5","_useState6","currentPage","setCurrentPage","_useState7","Math","ceil","listCustomers","_useState8","totalPages","setTotalPages","filteredCustomers","useMemo","row","name","toLowerCase","includes","company","phone","email","country","status","useEffect","newTotalPages","length","displayItems","slice","handleClick","pageNumber","_jsxs","className","css","children","_jsx","onClick","onFocus","width","height","xlinkHref","concat","sprite","type","value","onChange","event","currentTarget","placeholder","map","filteredCustomer","id","listCustomer","disabled","pageNumbers","startPage","endPage","i","push","generatePageNumbers","style","backgroundColor"],"sourceRoot":""}